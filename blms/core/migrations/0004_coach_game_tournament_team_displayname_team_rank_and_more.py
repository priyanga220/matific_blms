# Generated by Django 5.0.6 on 2024-06-19 06:31

import core.enums.gamestatus
import core.enums.gametype
import django.db.models.deletion
import enumchoicefield.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0003_rename_updateddate_team_created_date_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="Coach",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("created_date", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="Game",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "game_level",
                    enumchoicefield.fields.EnumChoiceField(
                        default=core.enums.gametype.GameType["QU"],
                        enum_class=core.enums.gametype.GameType,
                        max_length=2,
                    ),
                ),
                (
                    "status",
                    enumchoicefield.fields.EnumChoiceField(
                        default=core.enums.gamestatus.GameStatus["SC"],
                        enum_class=core.enums.gamestatus.GameStatus,
                        max_length=2,
                    ),
                ),
                ("date", models.DateTimeField()),
                ("created_date", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="Tournament",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("identifier", models.CharField(max_length=200)),
                ("mascot", models.CharField(max_length=100)),
                ("created_date", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.AddField(
            model_name="team",
            name="displayname",
            field=models.CharField(default="SDFG", max_length=5),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="team",
            name="rank",
            field=models.IntegerField(default=1),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="team",
            name="coach",
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.SET_NULL, to="core.coach"
            ),
        ),
        migrations.CreateModel(
            name="Player",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("display_name", models.CharField(max_length=50)),
                ("rank", models.IntegerField()),
                ("height", models.FloatField()),
                ("created_date", models.DateTimeField(auto_now_add=True)),
                (
                    "team",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.team",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="GameStat",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("teamref", models.CharField(max_length=100)),
                ("score", models.IntegerField()),
                ("iswinner", models.BooleanField(default=False)),
                ("created_date", models.DateTimeField(auto_now_add=True)),
                (
                    "game",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.game"
                    ),
                ),
                (
                    "team",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.team",
                    ),
                ),
                (
                    "playerofthematch",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.player",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PlayerStat",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("score", models.IntegerField()),
                ("impact_index", models.FloatField()),
                ("created_date", models.DateTimeField(auto_now_add=True)),
                (
                    "game",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.game"
                    ),
                ),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.player"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="game",
            name="tournament",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="core.tournament"
            ),
        ),
    ]
